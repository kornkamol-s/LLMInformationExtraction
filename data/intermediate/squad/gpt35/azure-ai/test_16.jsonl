{"input":"Question: What amount of time was the longest that Tesla spent working without stopping to rest?\n\nContext: During his second year of study at Graz, Tesla developed a passion for (and became very proficient at) billiards, chess and card-playing, sometimes spending more than 48 hours in a stretch at a gaming table.:43, 301 On one occasion at his laboratory, Tesla worked for a period of 84 hours without sleep or rest.:208 Kenneth Swezey, a journalist whom Tesla had befriended, confirmed that Tesla rarely slept. Swezey recalled one morning when Tesla called him at 3 a.m.: \"I was sleeping in my room like one dead ... Suddenly, the telephone ring awakened me ... [Tesla] spoke animatedly, with pauses, [as he] ... work[ed] out a problem, comparing one theory to another, commenting; and when he felt he had arrived at the solution, he suddenly closed the telephone.\"","output":"['84 hours', '84 hours', '84 hours']"}
{"input":"Question: Who did Tesla call in the middle of the night?\n\nContext: During his second year of study at Graz, Tesla developed a passion for (and became very proficient at) billiards, chess and card-playing, sometimes spending more than 48 hours in a stretch at a gaming table.:43, 301 On one occasion at his laboratory, Tesla worked for a period of 84 hours without sleep or rest.:208 Kenneth Swezey, a journalist whom Tesla had befriended, confirmed that Tesla rarely slept. Swezey recalled one morning when Tesla called him at 3 a.m.: \"I was sleeping in my room like one dead ... Suddenly, the telephone ring awakened me ... [Tesla] spoke animatedly, with pauses, [as he] ... work[ed] out a problem, comparing one theory to another, commenting; and when he felt he had arrived at the solution, he suddenly closed the telephone.\"","output":"['Kenneth Swezey', 'Kenneth Swezey', 'Kenneth Swezey,']"}
{"input":"Question: What was Kenneth Swezey's job?\n\nContext: During his second year of study at Graz, Tesla developed a passion for (and became very proficient at) billiards, chess and card-playing, sometimes spending more than 48 hours in a stretch at a gaming table.:43, 301 On one occasion at his laboratory, Tesla worked for a period of 84 hours without sleep or rest.:208 Kenneth Swezey, a journalist whom Tesla had befriended, confirmed that Tesla rarely slept. Swezey recalled one morning when Tesla called him at 3 a.m.: \"I was sleeping in my room like one dead ... Suddenly, the telephone ring awakened me ... [Tesla] spoke animatedly, with pauses, [as he] ... work[ed] out a problem, comparing one theory to another, commenting; and when he felt he had arrived at the solution, he suddenly closed the telephone.\"","output":"['journalist', 'journalist', 'journalist']"}
{"input":"Question: When did Tesla admit to a reporter that maybe he'd sacrificed too much by not having a relationship?\n\nContext: Tesla never married; he said his chastity was very helpful to his scientific abilities.:33 However, toward the end of his life, he told a reporter, \"Sometimes I feel that by not marrying, I made too great a sacrifice to my work ...\" There have been numerous accounts of women vying for Tesla's affection, even some madly in love with him.[citation needed] Tesla, though polite and soft-spoken, did not have any known relationships.","output":"['toward the end of his life', 'toward the end of his life', 'toward the end of his life']"}
{"input":"Question: Who said Tesla had a \"distinguished sweetness\"?\n\nContext: Tesla was asocial and prone to seclude himself with his work. However, when he did engage in a social life, many people spoke very positively and admiringly of Tesla. Robert Underwood Johnson described him as attaining a \"distinguished sweetness, sincerity, modesty, refinement, generosity, and force.\" His loyal secretary, Dorothy Skerrit, wrote: \"his genial smile and nobility of bearing always denoted the gentlemanly characteristics that were so ingrained in his soul.\" Tesla's friend, Julian Hawthorne, wrote, \"seldom did one meet a scientist or engineer who was also a poet, a philosopher, an appreciator of fine music, a linguist, and a connoisseur of food and drink.\":80","output":"['Robert Underwood Johnson', 'Robert Underwood Johnson', 'Robert Underwood Johnson']"}
{"input":"Question: What was Tesla likely to do with his work?\n\nContext: Tesla was asocial and prone to seclude himself with his work. However, when he did engage in a social life, many people spoke very positively and admiringly of Tesla. Robert Underwood Johnson described him as attaining a \"distinguished sweetness, sincerity, modesty, refinement, generosity, and force.\" His loyal secretary, Dorothy Skerrit, wrote: \"his genial smile and nobility of bearing always denoted the gentlemanly characteristics that were so ingrained in his soul.\" Tesla's friend, Julian Hawthorne, wrote, \"seldom did one meet a scientist or engineer who was also a poet, a philosopher, an appreciator of fine music, a linguist, and a connoisseur of food and drink.\":80","output":"['seclude himself', 'seclude himself', 'seclude himself with his work']"}
{"input":"Question: With what word was Tesla's sociability described?\n\nContext: Tesla was asocial and prone to seclude himself with his work. However, when he did engage in a social life, many people spoke very positively and admiringly of Tesla. Robert Underwood Johnson described him as attaining a \"distinguished sweetness, sincerity, modesty, refinement, generosity, and force.\" His loyal secretary, Dorothy Skerrit, wrote: \"his genial smile and nobility of bearing always denoted the gentlemanly characteristics that were so ingrained in his soul.\" Tesla's friend, Julian Hawthorne, wrote, \"seldom did one meet a scientist or engineer who was also a poet, a philosopher, an appreciator of fine music, a linguist, and a connoisseur of food and drink.\":80","output":"['asocial', 'asocial']"}
{"input":"Question: What was Julian Hawthorne's relation to Tesla?\n\nContext: Tesla was asocial and prone to seclude himself with his work. However, when he did engage in a social life, many people spoke very positively and admiringly of Tesla. Robert Underwood Johnson described him as attaining a \"distinguished sweetness, sincerity, modesty, refinement, generosity, and force.\" His loyal secretary, Dorothy Skerrit, wrote: \"his genial smile and nobility of bearing always denoted the gentlemanly characteristics that were so ingrained in his soul.\" Tesla's friend, Julian Hawthorne, wrote, \"seldom did one meet a scientist or engineer who was also a poet, a philosopher, an appreciator of fine music, a linguist, and a connoisseur of food and drink.\":80","output":"['friend', 'friend', 'friend']"}
{"input":"Question: When did Tesla become friends with Viereck?\n\nContext: Tesla was a good friend of Francis Marion Crawford, Robert Underwood Johnson, Stanford White, Fritz Lowenstein, George Scherff, and Kenneth Swezey. In middle age, Tesla became a close friend of Mark Twain; they spent a lot of time together in his lab and elsewhere. Twain notably described Tesla's induction motor invention as \"the most valuable patent since the telephone.\" In the late 1920s, Tesla also befriended George Sylvester Viereck, a poet, writer, mystic, and later, a Nazi propagandist. Tesla occasionally attended dinner parties held by Viereck and his wife.","output":"['late 1920s', 'the late 1920s', 'the late 1920s']"}
{"input":"Question: Who did he fire?\n\nContext: Tesla could be harsh at times and openly expressed disgust for overweight people, such as when he fired a secretary because of her weight.:110 He was quick to criticize clothing; on several occasions, Tesla directed a subordinate to go home and change her dress.:33","output":"['secretary', 'a secretary', 'a secretary']"}
{"input":"Question: Why did he fire the secretary?\n\nContext: Tesla could be harsh at times and openly expressed disgust for overweight people, such as when he fired a secretary because of her weight.:110 He was quick to criticize clothing; on several occasions, Tesla directed a subordinate to go home and change her dress.:33","output":"['her weight', 'her weight', 'her weight.']"}
{"input":"Question: What did he make the employee do when he didn't like her outfit?\n\nContext: Tesla could be harsh at times and openly expressed disgust for overweight people, such as when he fired a secretary because of her weight.:110 He was quick to criticize clothing; on several occasions, Tesla directed a subordinate to go home and change her dress.:33","output":"['go home and change', 'go home and change', 'to go home and change her dress']"}
{"input":"Question: What subatomic particle did Tesla deny the existence of?\n\nContext: Tesla exhibited a pre-atomic understanding of physics in his writings; he disagreed with the theory of atoms being composed of smaller subatomic particles, stating there was no such thing as an electron creating an electric charge (he believed that if electrons existed at all, they were some fourth state of matter or \"sub-atom\" that could only exist in an experimental vacuum and that they had nothing to do with electricity).:249 Tesla believed that atoms are immutable\u2014they could not change state or be split in any way. He was a believer in the 19th century concept of an all pervasive \"ether\" that transmitted electrical energy.","output":"['electron', 'an electron']"}
{"input":"Question: What did he think was everywhere in the universe?\n\nContext: Tesla exhibited a pre-atomic understanding of physics in his writings; he disagreed with the theory of atoms being composed of smaller subatomic particles, stating there was no such thing as an electron creating an electric charge (he believed that if electrons existed at all, they were some fourth state of matter or \"sub-atom\" that could only exist in an experimental vacuum and that they had nothing to do with electricity).:249 Tesla believed that atoms are immutable\u2014they could not change state or be split in any way. He was a believer in the 19th century concept of an all pervasive \"ether\" that transmitted electrical energy.","output":"['ether', 'ether']"}
{"input":"Question: What did he believe the ether did?\n\nContext: Tesla exhibited a pre-atomic understanding of physics in his writings; he disagreed with the theory of atoms being composed of smaller subatomic particles, stating there was no such thing as an electron creating an electric charge (he believed that if electrons existed at all, they were some fourth state of matter or \"sub-atom\" that could only exist in an experimental vacuum and that they had nothing to do with electricity).:249 Tesla believed that atoms are immutable\u2014they could not change state or be split in any way. He was a believer in the 19th century concept of an all pervasive \"ether\" that transmitted electrical energy.","output":"['transmitted electrical energy', 'transmitted electrical energy', 'transmitted electrical energy']"}
{"input":"Question: Which theory of Einstein's did Tesla speak critically toward?\n\nContext: Tesla was generally antagonistic towards theories about the conversion of matter into energy.:247 He was also critical of Einstein's theory of relativity, saying:","output":"['relativity', 'relativity', 'theory of relativity']"}
{"input":"Question: What \"dynamic theory\" did Tesla say he finished in 1937?\n\nContext: Tesla claimed to have developed his own physical principle regarding matter and energy that he started working on in 1892, and in 1937, at age 81, claimed in a letter to have completed a \"dynamic theory of gravity\" that \"[would] put an end to idle speculations and false conceptions, as that of curved space.\" He stated that the theory was \"worked out in all details\" and that he hoped to soon give it to the world. Further elucidation of his theory was never found in his writings.:309","output":"['gravity', 'gravity', 'of gravity']"}
{"input":"Question: When did Tesla start working on the problem of energy and matter?\n\nContext: Tesla claimed to have developed his own physical principle regarding matter and energy that he started working on in 1892, and in 1937, at age 81, claimed in a letter to have completed a \"dynamic theory of gravity\" that \"[would] put an end to idle speculations and false conceptions, as that of curved space.\" He stated that the theory was \"worked out in all details\" and that he hoped to soon give it to the world. Further elucidation of his theory was never found in his writings.:309","output":"['1892', '1892, and in 1937', '1892']"}
{"input":"Question: What shape of space did Tesla consider a \"false conception\"?\n\nContext: Tesla claimed to have developed his own physical principle regarding matter and energy that he started working on in 1892, and in 1937, at age 81, claimed in a letter to have completed a \"dynamic theory of gravity\" that \"[would] put an end to idle speculations and false conceptions, as that of curved space.\" He stated that the theory was \"worked out in all details\" and that he hoped to soon give it to the world. Further elucidation of his theory was never found in his writings.:309","output":"['curved', 'curved', 'curved']"}
{"input":"Question: How old was Tesla when he wrote that he'd completed his dynamic theory of gravity?\n\nContext: Tesla claimed to have developed his own physical principle regarding matter and energy that he started working on in 1892, and in 1937, at age 81, claimed in a letter to have completed a \"dynamic theory of gravity\" that \"[would] put an end to idle speculations and false conceptions, as that of curved space.\" He stated that the theory was \"worked out in all details\" and that he hoped to soon give it to the world. Further elucidation of his theory was never found in his writings.:309","output":"['81', '81', '81']"}
{"input":"Question: What attribute of humans interfered with nature's ruthlessness in Tesla's opinion?\n\nContext: Tesla, like many of his era, became a proponent of an imposed selective breeding version of eugenics. His opinion stemmed from the belief that humans' \"pity\" had interfered with the natural \"ruthless workings of nature,\" rather than from conceptions of a \"master race\" or inherent superiority of one person over another. His advocacy of it was, however, to push it further. In a 1937 interview, he stated:","output":"['pity', 'pity', 'pity']"}
{"input":"Question: Who did Tesla think would run the world of the future?\n\nContext: In 1926, Tesla commented on the ills of the social subservience of women and the struggle of women toward gender equality, and indicated that humanity's future would be run by \"Queen Bees.\" He believed that women would become the dominant sex in the future.","output":"['women', 'women', 'women']"}
{"input":"Question: What type of religious behavior was Tesla against?\n\nContext: Tesla was raised an Orthodox Christian. Later in his life, he did not consider himself to be a \"believer in the orthodox sense,\" and opposed religious fanaticism. Despite this, he had a profound respect for both Buddhism and Christianity.","output":"['fanaticism', 'fanaticism', 'fanaticism']"}
{"input":"Question: What article was published in 1937?\n\nContext: However, his religious views remain uncertain due to other statements that he made. For example, in his article, \"A Machine to End War\", published in 1937, Tesla stated:","output":"['\"A Machine to End War\"', '\"A Machine to End War\"', 'A Machine to End War']"}
{"input":"Question: Because of certain statements what was the believed state of his religious views?\n\nContext: However, his religious views remain uncertain due to other statements that he made. For example, in his article, \"A Machine to End War\", published in 1937, Tesla stated:","output":"['uncertain', 'uncertain', 'uncertain']"}
{"input":"Question: What did Tesla write?\n\nContext: Tesla wrote a number of books and articles for magazines and journals. Among his books are My Inventions: The Autobiography of Nikola Tesla, compiled and edited by Ben Johnston; The Fantastic Inventions of Nikola Tesla, compiled and edited by David Hatcher Childress; and The Tesla Papers.","output":"['books and articles', 'a number of books and articles', 'a number of books and articles']"}
{"input":"Question: Who published Tesla's writings?\n\nContext: Tesla wrote a number of books and articles for magazines and journals. Among his books are My Inventions: The Autobiography of Nikola Tesla, compiled and edited by Ben Johnston; The Fantastic Inventions of Nikola Tesla, compiled and edited by David Hatcher Childress; and The Tesla Papers.","output":"['magazines and journals', 'magazines and journals', 'magazines and journals']"}
{"input":"Question: Who edited Tesla's autobiography?\n\nContext: Tesla wrote a number of books and articles for magazines and journals. Among his books are My Inventions: The Autobiography of Nikola Tesla, compiled and edited by Ben Johnston; The Fantastic Inventions of Nikola Tesla, compiled and edited by David Hatcher Childress; and The Tesla Papers.","output":"['Ben Johnston', 'Ben Johnston', 'Ben Johnston']"}
{"input":"Question: What kind of media can references to Tesla be found in\n\nContext: Tesla's legacy has endured in books, films, radio, TV, music, live theater, comics and video games. The impact of the technologies invented or envisioned by Tesla is a recurring theme in several types of science fiction.","output":"['books, films, radio, TV, music, live theater, comics and video games', 'books, films, radio, TV, music, live theater, comics and video games', 'books, films, radio, TV, music, live theater, comics and video games']"}
{"input":"Question: How many types of science fiction have been impacted by Tesla?\n\nContext: Tesla's legacy has endured in books, films, radio, TV, music, live theater, comics and video games. The impact of the technologies invented or envisioned by Tesla is a recurring theme in several types of science fiction.","output":"['several', 'several', 'several']"}
{"input":"Question: On which magazine's cover did Tesla appear in 1931\n\nContext: On Tesla's 75th birthday in 1931, Time magazine put him on its cover. The cover caption \"All the world's his power house\" noted his contribution to electrical power generation. He received congratulatory letters from more than 70 pioneers in science and engineering, including Albert Einstein.","output":"['Time magazine', 'Time', 'Time']"}
{"input":"Question: For what occasion was he put on the cover?\n\nContext: On Tesla's 75th birthday in 1931, Time magazine put him on its cover. The cover caption \"All the world's his power house\" noted his contribution to electrical power generation. He received congratulatory letters from more than 70 pioneers in science and engineering, including Albert Einstein.","output":"['75th birthday', '75th birthday', '75th birthday']"}
{"input":"Question: What famous person congratulated him?\n\nContext: On Tesla's 75th birthday in 1931, Time magazine put him on its cover. The cover caption \"All the world's his power house\" noted his contribution to electrical power generation. He received congratulatory letters from more than 70 pioneers in science and engineering, including Albert Einstein.","output":"['Einstein', 'Albert Einstein', 'Albert Einstein']"}
{"input":"Question: How many other important people sent letters?\n\nContext: On Tesla's 75th birthday in 1931, Time magazine put him on its cover. The cover caption \"All the world's his power house\" noted his contribution to electrical power generation. He received congratulatory letters from more than 70 pioneers in science and engineering, including Albert Einstein.","output":"['more than 70', 'more than 70', 'more than 70']"}
{"input":"Question: What is the term for a task that generally lends itself to being solved by a computer?\n\nContext: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and relating those classes to each other. A computational problem is understood to be a task that is in principle amenable to being solved by a computer, which is equivalent to stating that the problem may be solved by mechanical application of mathematical steps, such as an algorithm.","output":"['computational problems', 'A computational problem', 'computational problem']"}
{"input":"Question: What are two basic primary resources used to guage complexity?\n\nContext: A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used. The theory formalizes this intuition, by introducing mathematical models of computation to study these problems and quantifying the amount of resources needed to solve them, such as time and storage. Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of processors (used in parallel computing). One of the roles of computational complexity theory is to determine the practical limits on what computers can and cannot do.","output":"['time and storage', 'time and storage', 'time and storage']"}
{"input":"Question: What unit is measured to determine circuit complexity?\n\nContext: A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used. The theory formalizes this intuition, by introducing mathematical models of computation to study these problems and quantifying the amount of resources needed to solve them, such as time and storage. Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of processors (used in parallel computing). One of the roles of computational complexity theory is to determine the practical limits on what computers can and cannot do.","output":"['number of gates in a circuit', 'number of gates in a circuit', 'number of gates']"}
{"input":"Question: What practical role does defining the complexity of problems play in everyday computing?\n\nContext: A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used. The theory formalizes this intuition, by introducing mathematical models of computation to study these problems and quantifying the amount of resources needed to solve them, such as time and storage. Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of processors (used in parallel computing). One of the roles of computational complexity theory is to determine the practical limits on what computers can and cannot do.","output":"['determine the practical limits on what computers can and cannot do', 'what computers can and cannot do', 'determine the practical limits on what computers can and cannot do']"}
{"input":"Question: What field of computer science analyzes the resource requirements of a specific algorithm isolated unto itself within a given problem?\n\nContext: Closely related fields in theoretical computer science are analysis of algorithms and computability theory. A key distinction between analysis of algorithms and computational complexity theory is that the former is devoted to analyzing the amount of resources needed by a particular algorithm to solve a problem, whereas the latter asks a more general question about all possible algorithms that could be used to solve the same problem. More precisely, it tries to classify problems that can or cannot be solved with appropriately restricted resources. In turn, imposing restrictions on the available resources is what distinguishes computational complexity from computability theory: the latter theory asks what kind of problems can, in principle, be solved algorithmically.","output":"['analysis of algorithms', 'analysis of algorithms', 'analysis of algorithms']"}
{"input":"Question: What field of computer science analyzes all possible algorithms in aggregate to determine the resource requirements needed to solve to a given problem?  \n\nContext: Closely related fields in theoretical computer science are analysis of algorithms and computability theory. A key distinction between analysis of algorithms and computational complexity theory is that the former is devoted to analyzing the amount of resources needed by a particular algorithm to solve a problem, whereas the latter asks a more general question about all possible algorithms that could be used to solve the same problem. More precisely, it tries to classify problems that can or cannot be solved with appropriately restricted resources. In turn, imposing restrictions on the available resources is what distinguishes computational complexity from computability theory: the latter theory asks what kind of problems can, in principle, be solved algorithmically.","output":"['computational complexity theory', 'computational complexity theory', 'computational complexity theory']"}
{"input":"Question: In computational complexity theory, what is the term given to describe the baseline abstract question needing to be solved? \n\nContext: A computational problem can be viewed as an infinite collection of instances together with a solution for every instance. The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself. In computational complexity theory, a problem refers to the abstract question to be solved. In contrast, an instance of this problem is a rather concrete utterance, which can serve as the input for a decision problem. For example, consider the problem of primality testing. The instance is a number (e.g. 15) and the solution is \"yes\" if the number is prime and \"no\" otherwise (in this case \"no\"). Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.","output":"['the problem', 'a problem', 'problem']"}
{"input":"Question: What is another name for any given measure of input associated with a problem?\n\nContext: A computational problem can be viewed as an infinite collection of instances together with a solution for every instance. The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself. In computational complexity theory, a problem refers to the abstract question to be solved. In contrast, an instance of this problem is a rather concrete utterance, which can serve as the input for a decision problem. For example, consider the problem of primality testing. The instance is a number (e.g. 15) and the solution is \"yes\" if the number is prime and \"no\" otherwise (in this case \"no\"). Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.","output":"['instances', 'the instance', 'instance']"}
{"input":"Question: What is the general term used to describe the output to any given input in a problem instance?\n\nContext: A computational problem can be viewed as an infinite collection of instances together with a solution for every instance. The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself. In computational complexity theory, a problem refers to the abstract question to be solved. In contrast, an instance of this problem is a rather concrete utterance, which can serve as the input for a decision problem. For example, consider the problem of primality testing. The instance is a number (e.g. 15) and the solution is \"yes\" if the number is prime and \"no\" otherwise (in this case \"no\"). Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.","output":"['solution', 'the solution', 'solution']"}
{"input":"Question: By how many kilometers does the traveling salesman problem seek to classify a route between the 15 largest cities in Germany?\n\nContext: To further highlight the difference between a problem and an instance, consider the following instance of the decision version of the traveling salesman problem: Is there a route of at most 2000 kilometres passing through all of Germany's 15 largest cities? The quantitative answer to this particular problem instance is of little use for solving other instances of the problem, such as asking for a round trip through all sites in Milan whose total length is at most 10 km. For this reason, complexity theory addresses computational problems and not particular problem instances.","output":"['2000', '2000', '2000']"}
{"input":"Question: What is one example of an instance that the quantitative answer to the traveling salesman problem fails to answer?\n\nContext: To further highlight the difference between a problem and an instance, consider the following instance of the decision version of the traveling salesman problem: Is there a route of at most 2000 kilometres passing through all of Germany's 15 largest cities? The quantitative answer to this particular problem instance is of little use for solving other instances of the problem, such as asking for a round trip through all sites in Milan whose total length is at most 10 km. For this reason, complexity theory addresses computational problems and not particular problem instances.","output":"['round trip through all sites in Milan', 'asking for a round trip through all sites in Milan whose total length is at most 10 km', 'a round trip through all sites in Milan whose total length is at most 10 km']"}
{"input":"Question: In a computational problem, what can be described as a string over an alphabet?\n\nContext: When considering computational problems, a problem instance is a string over an alphabet. Usually, the alphabet is taken to be the binary alphabet (i.e., the set {0,1}), and thus the strings are bitstrings. As in a real-world computer, mathematical objects other than bitstrings must be suitably encoded. For example, integers can be represented in binary notation, and graphs can be encoded directly via their adjacency matrices, or by encoding their adjacency lists in binary.","output":"['problem instance', 'a problem instance', 'problem instance']"}
{"input":"Question: What is one way in which graphs can be encoded? \n\nContext: When considering computational problems, a problem instance is a string over an alphabet. Usually, the alphabet is taken to be the binary alphabet (i.e., the set {0,1}), and thus the strings are bitstrings. As in a real-world computer, mathematical objects other than bitstrings must be suitably encoded. For example, integers can be represented in binary notation, and graphs can be encoded directly via their adjacency matrices, or by encoding their adjacency lists in binary.","output":"['adjacency matrices', 'directly via their adjacency matrices']"}
{"input":"Question: What kind of problems are one of the main topics studied in computational complexity theory?\n\nContext: Decision problems are one of the central objects of study in computational complexity theory. A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0. A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no. The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the formal language under consideration. If the algorithm deciding this problem returns the answer yes, the algorithm is said to accept the input string, otherwise it is said to reject the input.","output":"['Decision problems', 'Decision problems', 'Decision']"}
{"input":"Question: What are the two integer responses to a decision problem?\n\nContext: Decision problems are one of the central objects of study in computational complexity theory. A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0. A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no. The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the formal language under consideration. If the algorithm deciding this problem returns the answer yes, the algorithm is said to accept the input string, otherwise it is said to reject the input.","output":"['1 or 0', '1 or 0', '1 or 0']"}
{"input":"Question: What will the output be for a member of the language of a decision problem?\n\nContext: Decision problems are one of the central objects of study in computational complexity theory. A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0. A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no. The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the formal language under consideration. If the algorithm deciding this problem returns the answer yes, the algorithm is said to accept the input string, otherwise it is said to reject the input.","output":"['yes', 'yes', 'yes']"}
